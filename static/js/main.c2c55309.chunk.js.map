{"version":3,"sources":["data.js","Button.js","App.js","serviceWorker.js","index.js"],"names":["_","shuffle","name","audio","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playAudio","bind","assertThisInitialized","Audio","play","ReactGA","event","category","action","react_default","a","createElement","className","onClick","Component","initialize","pageview","App","year","Date","getFullYear","role","aria-label","data","map","d","i","src_Button","onButtonClick","key","href","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gPAmFeA,WAAEC,QA/EJ,CACX,CACEC,KAAQ,gBACRC,MAAS,4BAEX,CACED,KAAQ,iCACRC,MAAS,0BAEX,CACED,KAAQ,eACRC,MAAS,uBAEX,CACED,KAAQ,eACRC,MAAS,sBAEX,CACED,KAAQ,gBACRC,MAAS,0BAEX,CACED,KAAQ,eACRC,MAAS,wBAEX,CACED,KAAQ,gBACRC,MAAS,kCAEX,CACED,KAAQ,gBACRC,MAAA,uBAEF,CACED,KAAQ,gBACRC,MAAS,8BAEX,CACED,KAAQ,gBACRC,MAAS,4BAEX,CACED,KAAQ,2BACRC,MAAS,4BAEX,CACED,KAAQ,eACRC,MAAS,oBAEX,CACED,KAAQ,gBACRC,MAAS,gCAEX,CACED,KAAQ,gBACRC,MAAS,6BAEX,CACED,KAAQ,eACRC,MAAS,yBAEX,CACED,KAAQ,eACRC,MAAS,8CCvCEC,cAvBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,UAAYP,EAAKO,UAAUC,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFAA,2EAKjB,IAAIU,MAAMP,KAAKJ,MAAMF,OAAOc,OAC5BC,IAAQC,MAAM,CACZC,SAAU,eACVC,OAAQZ,KAAKJ,MAAMH,wCAIrB,OACEoB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASC,QAASjB,KAAKI,WAAYJ,KAAKJ,MAAMH,aAdjDyB,aCCrBT,IAAQU,WAAW,kBACnBV,IAAQW,SAAS,iBA8BFC,mLA3BJ,IAAAxB,EAAAG,KAEDsB,GADO,IAAIC,MACCC,cAClB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,QAAMU,KAAK,MAAMC,aAAW,kBAA5B,UAAV,gBACAb,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMU,KAAK,MAAMC,aAAW,WAA5B,gBAAH,aAA4Db,EAAAC,EAAAC,cAAA,QAAMU,KAAK,MAAMC,aAAW,WAA5B,iBAC5Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZW,EAAKC,IAAI,SAACC,EAAGC,GACZ,OACEjB,EAAAC,EAAAC,cAACgB,EAAD,CACEC,cAAenC,EAAKO,UACpB6B,IAAKH,EACLrC,KAAMoC,EAAEpC,KACRC,MAAOmC,EAAEnC,WAKjBmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,uCAAuCC,OAAO,SAAtD,cAAxB,4BAAiIb,EAAjI,8CAAkLT,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,sDAAsDC,OAAO,SAArE,0CArB1KjB,aCEEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c2c55309.chunk.js","sourcesContent":["import _ from 'underscore';\n\n// const randomInt = Math.floor(Math.random() * 4) + 1;\n// const randomInt = 4;\nconst data = [\n  {\n    \"name\": \"üëã \",\n    \"audio\": './sounds/hellooooooo.mp3',\n  },\n  {\n    \"name\": \"ü§¶‚Äç‚ôÇÔ∏è\",\n    \"audio\": './sounds/toughlook.mp3',\n  },\n  {\n    \"name\": \"üë™\",\n    \"audio\": './sounds/seamus.mp3',\n  },\n  {\n    \"name\": \"üç∫\",\n    \"audio\": './sounds/ohwow.mp3',\n  },\n  {\n    \"name\": \"üèÜ \",\n    \"audio\": './sounds/mcgalleon.mp3',\n  },\n  {\n    \"name\": \"üö®\",\n    \"audio\": './sounds/warning.mp3',\n  },\n  {\n    \"name\": \"üíª \",\n    \"audio\": './sounds/whatagreatwebsite.mp3',\n  },\n  {\n    \"name\": \"üë∂ \",\n    \"audio\": `./sounds/fluer4.mp3`,\n  },\n  {\n    \"name\": \"ü¶â \",\n    \"audio\": './sounds/protecthedwig.mp3',\n  },\n  {\n    \"name\": \"üí∞ \",\n    \"audio\": './sounds/ludoliteral.mp3',\n  },\n  {\n    \"name\": \"üá´üá∑\",\n    \"audio\": './sounds/beauxbatons.mp3',\n  },\n  {\n    \"name\": \"üçÜ\",\n    \"audio\": './sounds/vik.mp3',\n  },\n  {\n    \"name\": \"üë¨ \",\n    \"audio\": './sounds/mygoodfriendtom.mp3',\n  },\n  {\n    \"name\": \"üè∞ \",\n    \"audio\": './sounds/nosaferplace.mp3',\n  },\n  {\n    \"name\": \"üòΩ\",\n    \"audio\": './sounds/supfiggy.mp3', \n  },\n  {\n    \"name\": \"üîÆ\",\n    \"audio\": './sounds/deep.mp3', \n  }\n  // {\n  //   \"name\": \"üç∫\"\",\n  //   \"audio\": './sounds/holdtrue.mp3',\n  // },\n  // {\n  //   \"name\": \"üö® \",\n  //   \"audio\": './sounds/spoilerwarning.mp3',\n  // },\n  // {\n  //   \"name\": \"üôá \",\n  //   \"audio\": './sounds/deepcanon.mp3',\n  // },\n] \n\nexport default _.shuffle(data);","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.playAudio = this.playAudio.bind(this);\n  }\n  playAudio() {\n    new Audio(this.props.audio).play();\n    ReactGA.event({\n      category: 'Button Click',\n      action: this.props.name,\n  });\n  }\n  render() {\n    return(\n      <button className=\"button\" onClick={this.playAudio}>{this.props.name}</button>\n    )\n  }\n}\n\nButton.propTypes = {\n  name: PropTypes.string,\n  audio: PropTypes.any\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport data from './data.js';\nimport Button from './Button';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-127457647-1');\nReactGA.pageview('/homepage');\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n    const year = date.getFullYear();\n    return (\n      <div className=\"App\">\n        <h2>BINGE <span role=\"img\" aria-label=\"Lightning Bolt\">‚ö°</span>Ô∏è BOARD</h2>\n        <p><span role=\"img\" aria-label=\"Speaker\">üîà</span> Sound on <span role=\"img\" aria-label=\"Speaker\">üîà</span></p>\n        <div className=\"App-wrapper\">\n          {data.map((d, i) => {\n            return (\n              <Button\n                onButtonClick={this.playAudio}\n                key={i}\n                name={d.name}\n                audio={d.audio}\n              />\n            ) \n          })}\n        </div>\n        <div className=\"App-footer\">\n          <p>Source: The Ringer's <a href=\"https://www.theringer.com/binge-mode\" target=\"blank\">Binge Mode</a> podcast. Copyright &copy; { year }. Have feedback or want to add a new clip? <a href=\"https://github.com/mattjared/binge-board/issues/new\" target=\"blank\">Fill out an issue on Github!</a></p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}